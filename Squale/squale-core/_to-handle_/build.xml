<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- ==================================================================== -->
<!-- 		Ant Script used to generate Hibernate related resources		  -->
<!-- ==================================================================== -->
	
<project name="Hibernate Utils" basedir=".">
	
	<property name="project.basedir" value="${basedir}/.." />
	
	<property name="project.srcdir" value="${project.basedir}/src/main/java" />
	<property name="project.targetdir" value="${project.basedir}/target" />
	<property name="project.targetdir.ddl" value="${project.targetdir}/generated-ddl" />
	<property name="project.targetdir.hbm" value="${project.targetdir}/generated-hbm/mapping" />
	<!-- TODO: should find a way to prevent the use of a path relative to the web project -->
	<property name="hibernate.cfg.file.path" value="${project.basedir}/../squale-web/src/main/webapp/WEB-INF/config/hibernate.cfg.xml" />
	
	<!-- ================================================================== -->
	<!-- Retrieves all required libs thanks to Maven						-->
	<!-- ================================================================== -->
	<target name="retrieve-libs" description="Retrieves all required libs thanks to Maven">
		<echo>Retrieving libs and copying them into ${project.targetdir}/dependency</echo>
		<exec executable="mvn.bat" dir="${project.basedir}">
			<arg value="clean"/>
			<arg value="compile"/>
			<arg value="dependency:copy-dependencies"/>
		</exec>
	</target>
	
	<!-- ================================================================== -->
	<!-- Init classpath														-->
	<!-- ================================================================== -->
	<target name="init" description="Init variables and classpath" depends="retrieve-libs">
		<echo>Initializing project from folder: ${project.basedir}</echo>
		<tstamp>
        	<format property="today" pattern="dd-MM-yyyy"/>
    	</tstamp>
		<echo>Defining classpath...</echo>
		<path id="project.classpath">
			<!-- Compiled classes -->
			<pathelement location="${project.targetdir}/classes"/>
			<!-- Project dependencies -->
			<fileset dir="${project.targetdir}/dependency">
				<include name="**/*.jar"/>
			</fileset>
			<!-- xdoclet dependencies -->
			<fileset dir="${basedir}/lib/xdoclet2">
				<include name="**/*.jar"/>
			</fileset>
		</path>
	</target>

	
	<!-- ================================================================== -->
	<!-- HBM file generation with xdoclet 2									-->
	<!-- 																	-->
	<!-- Note: the files are generated in target/generated-hbm, so it is 	-->
	<!--       necessary to merge them with the source files which are in 	-->
	<!--       the src/main/resources/mapping folder.						-->
	<!-- ================================================================== -->
		
		<target name="java2hbm" description="Generates HBM files with xdoclet2" depends="init">
				<taskdef name="xdoclet2"
					classname="org.xdoclet.ant.XDocletTask"
					classpathref="project.classpath"/>
				<echo>Generating HBM files to ${project.targetdir.hbm}</echo>
				<mkdir dir="${project.targetdir.hbm}"/>
		    	<xdoclet2> 
		    		<fileset dir="${project.srcdir}">
						<include name="**/*.java" />
						<!--exclusion of the Enum class -->
		    			<exclude name="**/job/JobName.java"/>
		    			<exclude name="**/job/JobStatus.java"/>
					</fileset>
		        <component
		            classname="org.xdoclet.plugin.hibernate.HibernateMappingPlugin"
		        	destDir="${project.targetdir.hbm}"
		            version="3.0"/>		              
	    	</xdoclet2>
		</target>
	
	<!-- ================================================================== -->
	<!-- DDL generation														-->
	<!-- 																	-->
	<!-- Note: this assumes that the HBM files located in the source folder	--> 
	<!--       (src/main/resources/mapping) are correct. 					-->
	<!--       See the java2hbm target for this purpose						-->
	<!-- ================================================================== -->
	<target name="hbm2ddl" description="Generates DDL file" depends="init">
		<taskdef name="schemaexport"
			classname="org.hibernate.tool.hbm2ddl.SchemaExportTask"
			classpathref="project.classpath"/>
		
		<echo>Generating DDL files to ${project.targetdir.ddl}</echo>
		<mkdir dir="${project.targetdir.ddl}"/>
		<schemaexport 
			config="${hibernate.cfg.file.path}" 
			text="yes"
			drop="no"
			delimiter=";"
			output="${project.targetdir.ddl}/schema-export-${today}.sql">
		</schemaexport>
		<echo message="[Completed] DDL file can be found at ${project.targetdir.ddl}/schema-export-${today}.sql" />
	</target>
	
	
	
	
 
</project>
